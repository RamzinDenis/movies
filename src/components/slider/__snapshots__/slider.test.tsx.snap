// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<MovieSlider /> should render connected MovieSlider without errors 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(HocComponent)>
    <HocComponent
      dispatch={[Function]}
      slicedMovies={
        Array [
          Array [
            Object {
              "id": 1,
              "poster_path": "someMoveUrl",
            },
            Object {
              "id": 2,
              "poster_path": "Anothermovieurl",
            },
            Object {
              "id": 3,
              "poster_path": "AnotherOneUrl",
            },
          ],
        ]
      }
    >
      <Slider
        classN="movieSlider"
        dispatch={[Function]}
      >
        <Carousel
          arrows={false}
          className="movieSlider"
          data-id="slider"
          dots={true}
          draggable={false}
        >
          <div
            className="ant-carousel"
          >
            <Slider
              arrows={false}
              className="movieSlider"
              data-id="slider"
              dots={true}
              dotsClass="slick-dots slick-dots-bottom"
              draggable={false}
              vertical={false}
            >
              <InnerSlider
                accessibility={true}
                adaptiveHeight={false}
                afterChange={null}
                appendDots={[Function]}
                arrows={false}
                autoplay={false}
                autoplaySpeed={3000}
                beforeChange={null}
                centerMode={false}
                centerPadding="50px"
                className="movieSlider"
                cssEase="ease"
                customPaging={[Function]}
                data-id="slider"
                dots={true}
                dotsClass="slick-dots slick-dots-bottom"
                draggable={false}
                easing="linear"
                edgeFriction={0.35}
                fade={false}
                focusOnSelect={false}
                infinite={true}
                initialSlide={0}
                lazyLoad={null}
                nextArrow={null}
                onEdge={null}
                onInit={null}
                onLazyLoadError={null}
                onReInit={null}
                pauseOnDotsHover={false}
                pauseOnFocus={false}
                pauseOnHover={true}
                prevArrow={null}
                responsive={null}
                rows={1}
                rtl={false}
                slide="div"
                slidesPerRow={1}
                slidesToScroll={1}
                slidesToShow={1}
                speed={500}
                swipe={true}
                swipeEvent={null}
                swipeToSlide={false}
                touchMove={true}
                touchThreshold={5}
                unslick={true}
                useCSS={true}
                useTransform={true}
                variableWidth={false}
                vertical={false}
                waitForAnimate={true}
              >
                <div
                  className="slick-slider movieSlider slick-initialized"
                >
                  <div
                    className="slick-list"
                  >
                    <Track
                      centerMode={false}
                      centerPadding="50px"
                      cssEase="ease"
                      currentSlide={0}
                      fade={false}
                      focusOnSelect={null}
                      infinite={true}
                      lazyLoad={null}
                      lazyLoadedList={Array []}
                      listHeight={0}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onMouseOver={[Function]}
                      rtl={false}
                      slideCount={1}
                      slideHeight={0}
                      slideWidth={0}
                      slidesToScroll={1}
                      slidesToShow={1}
                      speed={500}
                      trackStyle={
                        Object {
                          "WebkitTransform": "translate3d(0px, 0px, 0px)",
                          "WebkitTransition": "",
                          "msTransform": "translateX(0px)",
                          "opacity": 1,
                          "transform": "translate3d(0px, 0px, 0px)",
                          "transition": "",
                        }
                      }
                      unslick={true}
                      variableWidth={false}
                      vertical={false}
                    >
                      <div
                        className="slick-track"
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseOver={[Function]}
                        style={
                          Object {
                            "WebkitTransform": "translate3d(0px, 0px, 0px)",
                            "WebkitTransition": "",
                            "msTransform": "translateX(0px)",
                            "opacity": 1,
                            "transform": "translate3d(0px, 0px, 0px)",
                            "transition": "",
                          }
                        }
                      >
                        <div
                          aria-hidden={false}
                          className="slick-slide slick-active slick-current"
                          data-index={0}
                          key="original0-0"
                          onClick={[Function]}
                          style={
                            Object {
                              "outline": "none",
                              "width": 0,
                            }
                          }
                          tabIndex="-1"
                        >
                          <div
                            key="0"
                          >
                            <div
                              className="slider__item"
                              data-id="slider-container"
                              key="0"
                              style={
                                Object {
                                  "display": "inline-block",
                                  "width": "100%",
                                }
                              }
                              tabIndex={-1}
                            >
                              <img
                                alt="movieSliderPicture"
                                className="img"
                                data-id="slider-img"
                                key="1"
                                src="http://image.tmdb.org/t/p/w780someMoveUrl"
                              />
                              <img
                                alt="movieSliderPicture"
                                className="img"
                                data-id="slider-img"
                                key="2"
                                src="http://image.tmdb.org/t/p/w780Anothermovieurl"
                              />
                              <img
                                alt="movieSliderPicture"
                                className="img"
                                data-id="slider-img"
                                key="3"
                                src="http://image.tmdb.org/t/p/w780AnotherOneUrl"
                              />
                            </div>
                          </div>
                        </div>
                      </div>
                    </Track>
                  </div>
                </div>
              </InnerSlider>
            </Slider>
          </div>
        </Carousel>
      </Slider>
    </HocComponent>
  </Connect(HocComponent)>
</Provider>
`;

exports[`<Slider /> should render Slider without errors 1`] = `
<Carousel
  arrows={false}
  className="slider"
  data-id="slider"
  dots={true}
  draggable={false}
>
  <div
    className="mock-item"
  >
    Slider
  </div>
</Carousel>
`;
